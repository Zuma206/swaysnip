#!/usr/bin/env python3
# Sway Snip by Zuma206
# Licensed under the GPLv3
import subprocess
import shutil

# Check that the required dependancies are installed for a given function
def dependancies(*dependancies):
  def decorator(func_or_class):
    for dependancy in dependancies:
      if shutil.which(dependancy) is None:
        print(f"Missing dependancy: {dependancy}")
    return func_or_class
  return decorator

# Wrapper for the grim utility
@dependancies("grim")
def grim():
  proc = subprocess.run(["grim", "-"], check=True, capture_output=True)
  return proc.stdout

# Wrapper for the imv utility
@dependancies("imv")
class IMV:
  def __init__(self, image, fullscreen=False):
    fullscreen_opt = ["-f"] if fullscreen else []
    self.__process = subprocess.run(["imv", *fullscreen_opt, "-"], input=image, check=True)

@dependancies("slurp")
class Slurp:
  def __init__(self):
    proc = subprocess.run(["slurp", "-f", "%w %h %x %y"], check=True, capture_output=True)
    self.w, self.h, self.x, self.y = map(float, proc.stdout.decode().split())

  def __repr__(self):
    return f"location({self.w}, {self.h}) size({self.x}, {self.y})"

# Takes a screenshot, and displays it in fullscreen
def main():
  image = grim()
  print("Took screen capture, displaying...")
  IMV(image, fullscreen=True)
  geometry = Slurp()
  print(geometry)

if __name__ == "__main__":
  main()
